{"version":3,"file":"index.umd.js","sources":["../node_modules/@babel/runtime/helpers/typeof.js","../src/utils/util.ts","../src/constant.ts","../src/Modal.ts","../src/createLayout.ts","../src/index.ts"],"sourcesContent":["function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    module.exports = _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n\n    module.exports[\"default\"] = module.exports, module.exports.__esModule = true;\n  } else {\n    module.exports = _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n\n    module.exports[\"default\"] = module.exports, module.exports.__esModule = true;\n  }\n\n  return _typeof(obj);\n}\n\nmodule.exports = _typeof;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","/**\n * 防抖函数\n * @author Doctorwu\n * @date 2020-09-13\n * @param {any} func\n * @param {any} delay=500\n * @param {any} immediately=false\n * @returns {any}\n */\nexport function debounce(func, delay = 500, immediately = false): Function {\n    let timer;\n    if (!immediately) {\n        return function (this: any, ...args) {\n            timer && clearTimeout(timer);\n            timer = setTimeout(() => {\n                func.apply(this, args);\n                timer = null;\n            }, delay);\n        };\n    } else {\n        return function (this: any, ...args) {\n            timer && clearTimeout(timer);\n            !timer && func.apply(this, args);\n            timer = setTimeout(() => {\n                timer = null;\n            }, delay);\n        };\n    }\n}\n\n/**\n * 节流函数\n * @author Doctorwu\n * @date 2020-09-13\n * @param {any} func\n * @param {any} delay=300\n * @returns {any}\n */\nexport function throttle(func, delay = 300) {\n    let timer: any = undefined,\n        previous = 0;\n    return function anonymous(this: any, ...params) {\n        let now = Date.now(),\n            remaining = delay - (now - previous);\n        if (remaining <= 0) {\n            clearTimeout(timer);\n            timer = undefined;\n            previous = Date.now();\n            func.apply(this, params);\n        } else if (!timer) {\n            timer = setTimeout(() => {\n                timer = undefined;\n                previous = Date.now();\n                func.apply(this, params);\n            }, remaining);\n        }\n    };\n}\n\nconst class2type = {};\nconst toString = class2type.toString; //Object.prototype.toString\nconst hasOwn = class2type.hasOwnProperty; //Object.prototype.hasOwnProperty\nconst fnToString = hasOwn.toString; //Function.prototype.toString\nconst ObjectFunctionString = fnToString.call(Object); //\"function Object() { [native code] }\"\nconst getProto = Object.getPrototypeOf; //获取对象原型链__proto__指向的原型\n\n// 建立数据类型检测的映射表 [object Xxx]:xxx\n[\n    \"Boolean\",\n    \"Number\",\n    \"String\",\n    \"Function\",\n    \"Array\",\n    \"Date\",\n    \"RegExp\",\n    \"Object\",\n    \"Error\",\n    \"Symbol\",\n    \"BigInt\",\n    \"GeneratorFunction\",\n].forEach((name) => {\n    class2type[`[object ${name}]`] = name.toLowerCase();\n});\n\n/**\n * toType：数据类型检测的公共方法\n * @author Doctorwu\n * @date 2020-09-13\n * @param {any} obj\n * @returns {any}\n */\nexport function toType(obj) {\n    // null/undefined\n    if (obj == null) {\n        return obj + \"\";\n    }\n    // 基本数据类型检测基于typeof\n    // 引用数据类型检测基于Object.prototype.toString.call\n    return typeof obj === \"object\" || typeof obj === \"function\"\n        ? class2type[toString.call(obj)] || \"object\"\n        : typeof obj;\n}\n\n/**\n * 检测是否为函数\n * @author Doctorwu\n * @date 2020-09-13\n * @param {any} obj\n * @returns {any}\n */\nexport function isFunction(obj) {\n    // i.e., `typeof document.createElement( \"object\" ) === \"function\"`\n    return typeof obj === \"function\" && typeof obj.nodeType !== \"number\";\n}\n\n/**\n * 检测是否为window对象\n * @author Doctorwu\n * @date 2020-09-13\n * @param {any} obj\n * @returns {any}\n */\nexport function isWindow(obj) {\n    // window.window===window\n    return obj != null && obj === obj.window;\n}\n\n/**\n * 检测是否为数组或者类数组\n * @author Doctorwu\n * @date 2020-09-13\n * @param {any} obj\n * @returns {any}\n */\nexport function isArrayLike(obj) {\n    // length:对象的length属性值或者是false\n    // type:获取检测值的数据类型\n    var length = !!obj && \"length\" in obj && obj.length,\n        type = toType(obj);\n\n    // 函数和window一定不是数据或者类数组（但是他们确实有length属性）\n    if (isFunction(obj) || isWindow(obj)) {\n        return false;\n    }\n\n    // type === \"array\"：数组\n    // length === 0：我们认为其是一空的类数组集合\n    // (length - 1) in obj：对于非空集合，我们认为只要最大索引在对象中，则证明索引是逐级递增的（不准确）\n    return (\n        type === \"array\" ||\n        length === 0 ||\n        (typeof length === \"number\" && length > 0 && length - 1 in obj)\n    );\n}\n\n/**\n * 验证是否为空对象：主要是看当前对象中是否存在私有属性\n * @author Doctorwu\n * @date 2020-09-13\n * @param {any} obj\n * @returns {any}\n */\nexport function isEmptyObject(obj) {\n    var name;\n    for (name in obj) {\n        // eslint-disable-next-line no-prototype-builtins\n        if (!obj.hasOwnProperty(name)) break;\n        return false;\n    }\n    return true;\n}\n\n/**\n * 是否为纯粹的对象\n * @author Doctorwu\n * @date 2020-09-13\n * @param {any} obj\n * @returns {any}\n */\nexport function isPlainObject(obj) {\n    var proto, Ctor;\n\n    // 基于toString.call返回结果不是[object Object]则一定不是纯粹的对象\n    if (!obj || toString.call(obj) !== \"[object Object]\") {\n        return false;\n    }\n\n    // 获取当前对象所属类的原型\n    proto = getProto(obj);\n\n    // Object.create(null)：创建一个空对象，但是没有__proto__\n    if (!proto) return true;\n\n    // Ctor：获取当前对象所属类的constructor\n    // 纯粹对象的特点：直属类的原型一定是Object.prototype（DOM元素对象/自定义的实例对象...都不是）\n    Ctor = hasOwn.call(proto, \"constructor\") && proto.constructor;\n    return (\n        typeof Ctor === \"function\" &&\n        fnToString.call(Ctor) === ObjectFunctionString\n    );\n}\n\n/**\n * 断言函数\n * @author Doctorwu\n * @date 2020-09-15\n * @param {any} exp\n * @param {string} msg\n * @returns {never|void}\n */\nexport function assert(exp: any, msg: string): never | void {\n    if (!exp) {\n        throw new Error(msg);\n    }\n}\n\nassert(true, '1323')\n\n/**\n * 深克隆\n * @author Doctorwu\n * @date 2020-09-15\n * @param {object} obj\n * @returns {any}\n */\nexport function deepClone<T extends object | null>(obj: T): T {\n    if (obj == null) return obj;\n    const constructor = obj.constructor;\n    if (typeof obj !== \"object\") return obj;\n    if (/^RegExp|Date$/i.test(constructor.name)) { // @ts-ignore\n        return new constructor(obj);\n    }\n    // @ts-ignore\n    let clone = new constructor();\n    for (const key in obj) {\n        // eslint-disable-next-line no-prototype-builtins\n        if (!obj.hasOwnProperty(key)) break;\n        // @ts-ignore\n        clone[key] = deepClone(obj[key]);\n    }\n    return clone;\n}\n\n/**\n * 格式化时间字符串\n * @author Doctorwu\n * @date 2020-09-15\n * @returns {any}\n * @param timeStr\n * @param template\n */\nexport function formatTime(timeStr: string, template = `{0}年{1}月{2}日{3}时{4}分{5}秒`): string {\n    // 首先获取时间字符串中的年月日等信息\n    const timeArr = timeStr.match(/\\d+/g) || [];\n\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    template = template.replace(/{(\\d)}/g, (...[, $1]) => {\n        let time = timeArr[$1] || \"00\";\n        time = time.length < 2 ? \"0\" + time : time;\n        return time;\n    });\n    return template;\n}\n\nexport function getDOM(expr: HTMLElement | string): HTMLElement | null {\n    if (expr instanceof HTMLElement) return expr;\n    return document.querySelector(expr);\n}\n\nexport function isPrimitiveValue(value: any): Boolean {\n    return [\n        \"string\",\n        \"number\",\n        \"boolean\",\n        \"symbol\",\n        \"bigint\",\n        \"null\",\n        \"undefined\"\n    ].includes(toType(value));\n}\n","export const NODE_TYPE = {\n    'Element': Symbol('Element'),\n    'Text': Symbol('Text'),\n}\n","import {View} from \"./index\";\nimport {ASTConfig, ASTNode} from \"./createLayout\";\nimport {isPrimitiveValue} from \"./utils/util\";\n\nlet readLocking = false;\nlet pid = 0;\nconst proxied = Symbol('proxied');\n\nexport class Modal<T = object> {\n    private _modal: any;\n    public deps: Set<View>;\n\n    constructor(options: T) {\n        this.deps = new Set;\n        this.initModal(options);\n    }\n\n    initModal(options: T) {\n        this._modal = this.reactive(options);\n    }\n\n    reactive(obj) {\n        const that = this;\n        obj._pid = pid++;\n        return new Proxy(<object><unknown>obj, {\n            get(target: {}, p: string | symbol, receiver: any): any {\n                // console.log('get', p);\n                if (p === proxied) return true;\n                let value = Reflect.get(target, p, receiver);\n                if (!isPrimitiveValue(value) && !readLocking && !value[proxied]) {\n                    readLocking = true;\n                    value = that.reactive(value);\n                    Reflect.set(target, p, value);\n                    readLocking = false;\n                }\n                if (View.Target) {\n                    that.collectView(View.Target);\n                }\n                return value;\n            },\n            set(target, p, value) {\n                // console.log('set', p);\n                if (!isPrimitiveValue(value) && !value[proxied]) value = that.reactive(value);\n                Reflect.set(target, p, value);\n                that.deps.forEach(dep => {\n                    dep.$update();\n                });\n                return true;\n            }\n        });\n    }\n\n    collectView(view) {\n        this.deps.add(view);\n    }\n\n    getModal() {\n        return this._modal;\n    }\n\n    resolveDirectives(attr: ASTConfig): void {\n        const directives = attr?.directives || null;\n        if (!directives) return undefined;\n        Object.keys(directives).forEach(key => {\n            const resolver = this[`d_${key}`];\n            if (resolver == undefined) return;\n            resolver.call(this, attr)\n        });\n    }\n\n    // 解析多个子元素\n    _f(...args) {\n        return args;\n    }\n\n    //解析Text\n    _t(str) {\n        return {\n            type: 'text',\n            content: str\n        };\n    }\n\n    // 解析Element\n    _e(eName, config: ASTConfig, children?: ASTNode[]) {\n        const element = {\n            tagName: eName,\n            type: 'element',\n            config,\n            children\n        };\n        return element;\n    }\n\n    // 解析for指令\n    _l(expr, func) {\n        const list: any[] = eval(`this._modal.${expr}`);\n        const elements: any[] = [];\n        list.forEach(item => {\n            elements.push(func.call(this, item));\n        });\n        return elements;\n    }\n\n    // 解析Attr\n    _a(attr) {\n        if (!attr) return;\n        this.resolveDirectives(attr);\n        Object.keys(attr.bind = attr.bind || {}).forEach(key => {\n            attr[key] = this.parseModal(attr.bind[key]);\n        })\n        return attr;\n    }\n\n    // 解析表达式\n    _s(expr) {\n        return eval(`this.${expr} || this._modal?.${expr}`);\n    }\n\n    d_bind(attr: ASTConfig) {\n        const bind = (attr.directives as any).bind.expr;\n        let value = (attr.directives as any).bind.value;\n        console.log(value);\n        (attr.directives as any).bind.value = this.parseModal(value);\n        console.log((attr.directives as any).bind.value)\n        const fn = new Function(\"attr\", \"with(this){return eval(`new Object(${attr.directives.bind.value})`)}\");\n        attr[bind] = fn.call(this, attr);\n    }\n\n    parseModal(str: string) {\n        if (!str) return \"\";\n        return str.replace(/\\{%([^%}]+)%\\}/g, (...args) => {\n            // const withFunc = new Function('modal', 'expr',\n            //     `\n            //     console.log(expr)\n            //     debugger;\n            //     return eval(`t`)\n            //     with(modal){return eval(\"expr\")}\n            // `);withFunc(this._modal, args[1]);\n            return eval(`this._modal.${args[1]}`)\n        });\n    }\n}\n\n\nexport function omitWrap(str) {\n    if (!str) return \"\";\n    return str.replace(/\\{%([^%}]+)%\\}/g, (...args) => {\n        return `\" + _s('${args[1]}') + \"`;\n    });\n}\n","import {NODE_TYPE} from \"./constant\";\nimport {primitiveValue} from \"./common/types\";\nimport {View} from \"./index\";\nimport {Modal, omitWrap} from \"./Modal\";\n\nexport interface ASTNode {\n    type: typeof NODE_TYPE[keyof typeof NODE_TYPE];\n    tagName?: string;\n    config?: ASTConfig;\n    children?: ASTNode[];\n    content?: Omit<primitiveValue, 'Symbol'>;\n    $parent?: any;\n}\n\nexport interface ASTConfig {\n    style?: object;\n    directives?: object;\n    bind?: object;\n    _DForData?: any;\n}\n\nexport function createLayout(this: View, node: ASTNode, modal): HTMLElement {\n    const code = genCode.call(this, [node]);\n    console.log(modal);\n    const render = new Function('modal', `with(modal){return ${code}}`);\n    this.$update = () => {\n        const dom = genHTML.call(this, render(modal)).childNodes[0];\n        this.$el?.parentNode?.replaceChild(dom, this.$el);\n        this.$el = <HTMLElement>dom;\n    }\n    console.log(render);\n    View.Target = this;\n    const ast = render(modal);\n    View.Target = undefined;\n    console.log(ast);\n    const dom = genHTML.call(this, ast);\n    return <HTMLElement>dom.childNodes[0];\n}\n\n\nfunction resolveStyle(dom, style: object = {}) {\n    Object.keys(style || {}).forEach(key => {\n        dom.style[key] = style[key];\n    });\n}\n\nfunction resolveBind(dom, bind: object = {}, modal: Modal) {\n    Object.keys(bind || {}).forEach(key => {\n        dom[key] = modal.parseModal(bind[key]);\n    });\n}\n\n\nfunction genHTML(this: View, VNodes): DocumentFragment {\n    const fragment = document.createDocumentFragment();\n    VNodes.forEach(node => {\n        if (Array.isArray(node)) {\n            node.forEach(child => {\n                if (child.type === \"element\") {\n                    const dom = document.createElement(child.tagName);\n                    resolveBind(dom, child?.config?.bind, this.$modal);\n                    resolveStyle(dom, child?.config?.style);\n                    if (child.children) dom.appendChild(genHTML.call(this, child.children));\n                    fragment.append(dom);\n                }\n                if (child.type === 'text') {\n                    fragment.append(document.createTextNode(child.content));\n                }\n            })\n        } else {\n            if (node.type === \"element\") {\n                const dom = document.createElement(node.tagName);\n                resolveBind(dom, node?.config?.bind, this.$modal);\n                resolveStyle(dom, node?.config?.style);\n                if (node.children) dom.appendChild(genHTML.call(this, node.children));\n                fragment.append(dom);\n            }\n            if (node.type === 'text') {\n                fragment.append(document.createTextNode(node.content));\n            }\n        }\n    });\n\n    return fragment;\n}\n\n\nexport function genCode(this: View, nodes: ASTNode[], modal?:any) {\n    let content = \"\";\n    nodes.forEach(node => {\n        let dContent: string | undefined = \"\";\n        dContent = this.resolveDirectives(node)\n        if (dContent) {\n            content += dContent;\n            return;\n        }\n        if (node.type === NODE_TYPE.Element) {\n            content += `_e(\"${node.tagName}\",${node.config ? `_a(${JSON.stringify(node.config)})` : null},${node.children ? genCode.call(this, node.children) : null}),`;\n        }\n        if (node.type === NODE_TYPE.Text) {\n            content += `_t(\"${omitWrap(node.content)}\"${modal ? `,\"${modal}\"` : \"\"}),`;\n        }\n    })\n    return `_f(${content})`;\n}\n\n","import {deepClone, getDOM, isPrimitiveValue} from \"./utils/util\";\nimport {NODE_TYPE} from \"./constant\";\nimport {ASTNode, createLayout, genCode} from \"./createLayout\";\nimport type {Modal as _Modal} from \"./Modal\";\nimport {primitiveValue} from \"./common/types\";\n\nexport const Modal = require(\"./Modal\").Modal;\nlet vid = 0;\n\nexport class View {\n    public rootElement!: HTMLElement | null;\n    public $el!: HTMLElement;\n    public $modal!: _Modal;\n    public modalSet: Set<_Modal> = new Set;\n    public $update!: Function;\n    public vid: number;\n\n    static Target: View | undefined;\n\n    constructor() {\n        this.vid = vid++;\n    }\n\n    render(modal: _Modal | primitiveValue, container: HTMLElement | string) {\n        // 如果modal是原始值，则用Modal包装一层\n        if (isPrimitiveValue(modal)) modal = new Modal({default: modal});\n        // 给当前的View实例绑定一个数据对象\n        this.bindModal(<_Modal>modal);\n\n        // 解析出View挂载的容器\n        this.rootElement = getDOM(container);\n        if (this.rootElement === null) return;\n        // 构建layout，数据绑定在模板中\n        this.$el = createLayout.call(this, this.getLayout(), this.$modal);\n        this.rootElement.appendChild(this.$el);\n    }\n\n    getLayout(): ASTNode {\n        return {\n            type: NODE_TYPE.Element,\n            tagName: 'div',\n            config: {\n                style: {\n                    color: 'red'\n                }\n            },\n            children: [\n                {\n                    type: NODE_TYPE.Text,\n                    content: \"Hello {%guest%}, my name is {%myName%}, now is {%date%}\"\n                },\n                {\n                    type: NODE_TYPE.Element,\n                    tagName: 'div',\n                    children: [\n                        {\n                            type: NODE_TYPE.Element,\n                            tagName: 'p',\n                            children: [\n                                {\n                                    type: NODE_TYPE.Text,\n                                    content: \"I like read {%item.name%}\",\n                                }\n                            ],\n                            config: {\n                                directives: {\n                                    for: {\n                                        expr: 'books',\n                                        alias: 'item'\n                                    },\n                                    bind: {\n                                        expr: 'style',\n                                        value: \"{%obj%}\"\n                                    }\n                                }\n                            },\n                        }\n                    ]\n                },\n                {\n                    type: NODE_TYPE.Element,\n                    tagName: 'div',\n                    children: [\n                        {\n                            type: NODE_TYPE.Text,\n                            content: \"{%myName%} : \"\n                        },\n                        {\n                            type: NODE_TYPE.Element,\n                            tagName: 'input',\n                            config: {\n                                bind: {\n                                    value: \"{%myName%}\"\n                                }\n                            }\n                        }\n                    ]\n                },\n                {\n                    type: NODE_TYPE.Element,\n                    tagName: 'div',\n                    config: {\n                        style: {\n                            color: 'blue'\n                        }\n                    },\n                    children: [\n                        {\n                            type: NODE_TYPE.Text,\n                            content: \"Hello \"\n                        },\n                        {\n                            type: NODE_TYPE.Text,\n                            content: \"{%guest%}, \"\n                        },\n                        {\n                            type: NODE_TYPE.Text,\n                            content: \"my name is\"\n                        },\n                        {\n                            type: NODE_TYPE.Text,\n                            content: \" {%myName%}\"\n                        },\n                    ]\n                },\n            ]\n        }\n    }\n\n    bindModal(modal: _Modal) {\n        this.$modal = modal;\n    }\n\n\n\n    resolveDirectives(node: ASTNode): string | undefined {\n        const directives = node?.config?.directives || null;\n        if (!directives) return undefined;\n        let content = \"\";\n        Object.keys(directives).forEach(key => {\n            const resolver = this[`d_${key}`];\n            if (resolver == undefined) return;\n            content += resolver.call(this, node, content)\n        });\n        return content;\n    }\n\n    d_for(node: ASTNode):string {\n        const {\n            directives: {for: config },\n        } = <any>node.config!;\n        const nConfig = deepClone(node.config!);\n        delete (nConfig.directives as any).for;\n        return `_l(\"${config.expr}\", function(${config.alias}){\n        this[\"${config.alias}\"] = ${config.alias};\n        return _e(\"${node.tagName}\", _a(${JSON.stringify(nConfig)}), ${node.children ? genCode.call(this, node.children) : null});\n        delete this[\"${config.expr}\"];\n        }),`;\n    }\n}\n"],"names":["class2type","toString","hasOwn","hasOwnProperty","fnToString","call","Object","forEach","name","toLowerCase","toType","obj","assert","exp","msg","Error","deepClone","constructor","test","clone","key","getDOM","expr","HTMLElement","document","querySelector","isPrimitiveValue","value","includes","NODE_TYPE","Symbol","omitWrap","str","replace","_i","args","createLayout","node","modal","code","genCode","console","log","render","Function","$update","dom","genHTML","_this","childNodes","$el","parentNode","replaceChild","View","Target","ast","undefined","resolveStyle","style","keys","resolveBind","bind","parseModal","VNodes","fragment","createDocumentFragment","Array","isArray","child","type","createElement","tagName","config","$modal","children","appendChild","append","createTextNode","content","nodes","dContent","resolveDirectives","Element","JSON","stringify","Text","Modal","require","vid","Set","container","default","bindModal","rootElement","getLayout","color","directives","for","alias","resolver","nConfig"],"mappings":"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"}