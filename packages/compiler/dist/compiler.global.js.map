{"version":3,"file":"compiler.global.js","sources":["../src/token-reader.ts","../src/tokenizer.ts","../src/ast.ts","../src/transform.ts","../src/compiler.ts","../src/index.ts"],"sourcesContent":["import { JSXTokenizer } from \"./tokenizer\";\r\n\r\nexport class TokenReader {\r\n  tokens: JSXTokenizer.IToken[] = [];\r\n  pos: number = 0;\r\n\r\n  constructor(tokens: JSXTokenizer.IToken[]) {\r\n    this.tokens = tokens;\r\n  }\r\n\r\n  loadTokens(tokens: JSXTokenizer.IToken[]) {\r\n    this.tokens = tokens;\r\n    this.pos = 0;\r\n  }\r\n\r\n  read(): JSXTokenizer.IToken | null {\r\n    if (this.pos < this.tokens.length) {\r\n      return this.tokens[this.pos++];\r\n    }\r\n    return null;\r\n  }\r\n\r\n  peek(): JSXTokenizer.IToken | null {\r\n    if (this.pos < this.tokens.length) {\r\n      return this.tokens[this.pos];\r\n    }\r\n    return null;\r\n  }\r\n\r\n  unread(): void {\r\n    if (this.pos > 0) {\r\n      this.pos -= 1;\r\n    }\r\n  }\r\n}\r\n","export module JSXTokenizer {\r\n  export interface ITokenizerConstructor {\r\n    new(): ITokenizer;\r\n  }\r\n\r\n  export type TokenizerParamter = string;\r\n\r\n  export interface IToken {\r\n    type: Symbol | null;\r\n    value: string;\r\n  }\r\n\r\n  export interface IStateExcutor extends Function {\r\n    (char: string): IStateExcutor | undefined;\r\n  }\r\n\r\n  export type REType = {\r\n    [props: string]: RegExp;\r\n  };\r\n\r\n  export interface ITokenizer {\r\n    currentToken: IToken;\r\n    tokens: IToken[];\r\n    RE: REType;\r\n    run(input: JSXTokenizer.TokenizerParamter): IToken[];\r\n    searchBeginTagStart: IStateExcutor;\r\n    searchJSXIdentifier: IStateExcutor;\r\n    searchFirstCommentBar: IStateExcutor;\r\n    searchSecondCommentBar: IStateExcutor;\r\n    searchCommentContent: IStateExcutor;\r\n    searchCommentEnd: IStateExcutor;\r\n    searchJSXAttributeKey: IStateExcutor;\r\n    foundBackFlashInAttribute: IStateExcutor;\r\n    searchJSXAttributeValue: IStateExcutor;\r\n    foundAttributeQuote: IStateExcutor;\r\n    foundJSXBeginTagEnd: IStateExcutor;\r\n    resetCurrentToken(): void;\r\n    emit(token: IToken): void;\r\n    pop(): IToken | undefined;\r\n  }\r\n\r\n  export const TagStartType = Symbol(\"TagStartType\");\r\n  export const JSXIdentifierType = Symbol(\"JSXIdentifier\");\r\n  export const JSXAttributeKey = Symbol(\"JSXAttributeKey\");\r\n  export const Equator = Symbol(\"Equator\");\r\n  export const JSXAttributeValue = Symbol(\"JSXAttributeValue\");\r\n  export const TagEndType = Symbol(\"TagEndType\");\r\n  export const BackFlash = Symbol(\"BackFlash\");\r\n  export const Text = Symbol(\"Text\");\r\n  export const Comment = Symbol(\"Comment\");\r\n}\r\n\r\nexport class Tokenizer implements JSXTokenizer.ITokenizer {\r\n  tokens: JSXTokenizer.IToken[] = [];\r\n  currentQuote: string | undefined;\r\n  currentToken: JSXTokenizer.IToken = {\r\n    type: Symbol(\"INIT\"),\r\n    value: \"\",\r\n  };\r\n  RE: JSXTokenizer.REType = {\r\n    LETTERS: /[a-zA-Z0-9\\-]/,\r\n    ATTRIBUTEKEY: /[a-zA-Z0-9-@:$\\.]/,\r\n    ATTRIBUTEVALUE: /[^\\\"\\'\\`]/,\r\n    Text: /[^>]/,\r\n    commentContent: /[^-]/,\r\n    Quote: /['\"`]/,\r\n  };\r\n\r\n  run(input: JSXTokenizer.TokenizerParamter): JSXTokenizer.IToken[] {\r\n    this.tokens = [];\r\n    let state: JSXTokenizer.IStateExcutor | void = this.searchBeginTagStart;\r\n    for (const char of input) {\r\n      if (state !== undefined) {\r\n        // 忽略换行\r\n        if (/\\r\\n|\\r|\\n/.test(char)) continue;\r\n        state = state && state.call(this, char);\r\n      }\r\n    }\r\n    console.log(\"Tokens Generate Success!\");\r\n\r\n    return this.tokens;\r\n  }\r\n\r\n  searchBeginTagStart(char: string): JSXTokenizer.IStateExcutor {\r\n    if (char === \"<\") {\r\n      this.emit(this.currentToken);\r\n      this.emit({\r\n        type: JSXTokenizer.TagStartType,\r\n        value: char,\r\n      });\r\n      this.resetCurrentToken();\r\n      return this.searchJSXIdentifier;\r\n    }\r\n\r\n    if (this.RE.Quote.test(char)) {\r\n      this.currentToken.type = JSXTokenizer.Text;\r\n      this.currentToken.value += `\\\\${char}`;\r\n      return this.searchBeginTagStart;\r\n    }\r\n\r\n    if (this.RE.Text.test(char)) {\r\n      this.currentToken.type = JSXTokenizer.Text;\r\n      this.currentToken.value += char;\r\n      return this.searchBeginTagStart;\r\n    }\r\n\r\n    throw TypeError(\"UnExcepted Error\");\r\n  }\r\n\r\n  searchJSXIdentifier(char: string): JSXTokenizer.IStateExcutor {\r\n    if (this.RE.LETTERS.test(char)) {\r\n      this.currentToken.type = JSXTokenizer.JSXIdentifierType;\r\n      this.currentToken.value += char;\r\n      return this.searchJSXIdentifier;\r\n    }\r\n    if (char === \" \") {\r\n      this.emit(this.currentToken);\r\n      this.resetCurrentToken();\r\n      return this.searchJSXAttributeKey;\r\n    }\r\n    if (char === \"/\") {\r\n      this.emit({\r\n        type: JSXTokenizer.BackFlash,\r\n        value: char,\r\n      });\r\n      return this.searchJSXIdentifier;\r\n    }\r\n    if (char === \">\") {\r\n      this.emit(this.currentToken);\r\n      this.resetCurrentToken();\r\n      this.emit({\r\n        type: JSXTokenizer.TagEndType,\r\n        value: char,\r\n      });\r\n      return this.searchBeginTagStart;\r\n    }\r\n    if (char === \"!\") {\r\n      let lastToken = this.pop();\r\n      if (\r\n        lastToken !== undefined &&\r\n        lastToken.type !== JSXTokenizer.TagStartType\r\n      ) {\r\n        throw TypeError(`UnExcepted char ${char}`);\r\n      }\r\n      this.currentToken = {\r\n        type: JSXTokenizer.Comment,\r\n        value: \"<!\",\r\n      };\r\n      return this.searchFirstCommentBar;\r\n    }\r\n\r\n    throw TypeError(\"UnExcepted Error\");\r\n  }\r\n\r\n  searchFirstCommentBar(char: string): JSXTokenizer.IStateExcutor {\r\n    if (char === \"-\") {\r\n      this.currentToken.value += char;\r\n      return this.searchSecondCommentBar;\r\n    }\r\n    throw TypeError(\"UnExcepted Error\");\r\n  }\r\n\r\n  searchSecondCommentBar(char: string): JSXTokenizer.IStateExcutor {\r\n    if (char === \"-\") {\r\n      this.currentToken.value += char;\r\n      return this.searchCommentContent;\r\n    }\r\n    throw TypeError(\"UnExcepted Error\");\r\n  }\r\n\r\n  searchCommentContent(char: string): JSXTokenizer.IStateExcutor {\r\n    if (this.RE.commentContent.test(char)) {\r\n      this.currentToken.value += char;\r\n      return this.searchCommentContent;\r\n    } else if (char === \"-\") {\r\n      this.currentToken.value += char;\r\n      return this.searchCommentEnd;\r\n    }\r\n\r\n    throw TypeError(\"Unexpeted Error\");\r\n  }\r\n\r\n  searchCommentEnd(char: string): JSXTokenizer.IStateExcutor {\r\n    if (char === \"-\") {\r\n      this.currentToken.value += char;\r\n      return this.searchCommentEnd;\r\n    } else if (char === \">\") {\r\n      this.currentToken.value += char;\r\n      this.emit(this.currentToken);\r\n      this.resetCurrentToken();\r\n      return this.searchBeginTagStart;\r\n    } else {\r\n      this.currentToken.value += char;\r\n      return this.searchCommentContent;\r\n    }\r\n\r\n    throw TypeError(\"Unexpeted Error\");\r\n  }\r\n\r\n  searchJSXAttributeKey(char: string): JSXTokenizer.IStateExcutor {\r\n    if (char === \" \") {\r\n      this.emit(this.currentToken);\r\n      this.resetCurrentToken();\r\n      return this.searchJSXAttributeKey;\r\n    }\r\n    if (this.RE.ATTRIBUTEKEY.test(char)) {\r\n      this.currentToken.type = JSXTokenizer.JSXAttributeKey;\r\n      this.currentToken.value += char;\r\n      return this.searchJSXAttributeKey;\r\n    }\r\n\r\n    if (char === \"=\") {\r\n      this.emit(this.currentToken);\r\n      this.resetCurrentToken();\r\n      this.emit({\r\n        type: JSXTokenizer.Equator,\r\n        value: char,\r\n      });\r\n      return this.searchJSXAttributeValue;\r\n    }\r\n\r\n    if (char === \">\") {\r\n      this.emit(this.currentToken);\r\n      this.resetCurrentToken();\r\n      this.emit({\r\n        type: JSXTokenizer.TagEndType,\r\n        value: char,\r\n      });\r\n      return this.foundJSXBeginTagEnd;\r\n    }\r\n\r\n    if (char === \"/\") {\r\n      this.emit({\r\n        type: JSXTokenizer.BackFlash,\r\n        value: char,\r\n      });\r\n      return this.foundBackFlashInAttribute;\r\n    }\r\n    throw TypeError(\"UnExcepted Error\");\r\n  }\r\n\r\n  foundBackFlashInAttribute(char: string): JSXTokenizer.IStateExcutor {\r\n    if (char === \">\") {\r\n      this.emit({\r\n        type: JSXTokenizer.TagEndType,\r\n        value: char,\r\n      });\r\n      return this.foundJSXBeginTagEnd;\r\n    }\r\n    throw TypeError(\"Should Be > after /\");\r\n  }\r\n\r\n  @jumpSpace\r\n  searchJSXAttributeValue(char: string): JSXTokenizer.IStateExcutor {\r\n    if (this.RE.Quote.test(char)) {\r\n      this.currentQuote = char;\r\n      this.currentToken.type = JSXTokenizer.JSXAttributeValue;\r\n      this.currentToken.value = \"\";\r\n      return this.foundAttributeQuote;\r\n    }\r\n\r\n    throw TypeError(\"UnExcepted Error\");\r\n  }\r\n\r\n  foundAttributeQuote(char: string): JSXTokenizer.IStateExcutor {\r\n    if (this.RE.ATTRIBUTEVALUE.test(char)) {\r\n      this.currentToken.type = JSXTokenizer.JSXAttributeValue;\r\n      this.currentToken.value += char;\r\n      return this.foundAttributeQuote;\r\n    }\r\n\r\n    if (char === this.currentQuote) {\r\n      this.currentToken.type = JSXTokenizer.JSXAttributeValue;\r\n      // this.currentToken.value += char;\r\n      this.emit(this.currentToken, true);\r\n      this.resetCurrentToken();\r\n      return this.searchJSXAttributeKey;\r\n    }\r\n\r\n    if (this.RE.Quote.test(char)) {\r\n      this.currentToken.value += `\\\\${char}`;\r\n      return this.foundAttributeQuote;\r\n    }\r\n    throw TypeError(\"UnExcepted Error\");\r\n  }\r\n\r\n  foundJSXBeginTagEnd(char: string): JSXTokenizer.IStateExcutor {\r\n    if (char === \"<\") {\r\n      this.emit(this.currentToken);\r\n      this.currentToken = {\r\n        type: JSXTokenizer.TagStartType,\r\n        value: char,\r\n      };\r\n      this.emit(this.currentToken);\r\n      this.resetCurrentToken();\r\n      return this.searchJSXIdentifier;\r\n    }\r\n\r\n    if (this.RE.Quote.test(char)) {\r\n      this.currentToken.type = JSXTokenizer.Text;\r\n      this.currentToken.value += `\\\\${char}`;\r\n      return this.foundJSXBeginTagEnd;\r\n    }\r\n    this.currentToken.type = JSXTokenizer.Text;\r\n    this.currentToken.value += char;\r\n    return this.foundJSXBeginTagEnd;\r\n  }\r\n\r\n  resetCurrentToken() {\r\n    if (this.currentToken === null) return;\r\n    this.currentToken = {\r\n      type: Symbol(\"INIT\"),\r\n      value: \"\",\r\n    };\r\n  }\r\n\r\n  emit(token: JSXTokenizer.IToken, force?: boolean): void {\r\n    if ((!token.value || !token.value.trim()) && !force) return;\r\n\r\n    this.tokens.push(token);\r\n  }\r\n\r\n  pop(): JSXTokenizer.IToken | undefined {\r\n    return this.tokens.pop();\r\n  }\r\n}\r\n\r\nfunction jumpSpace(\r\n  target: any,\r\n  propertyKey: string,\r\n  descriptor: PropertyDescriptor\r\n) {\r\n  let method = descriptor.value;\r\n  let jumpSpaceFunc = function (this: JSXTokenizer.ITokenizer, char: string) {\r\n    if (char === \" \") return jumpSpaceFunc;\r\n    return method.call(this, char);\r\n  };\r\n  descriptor.value = jumpSpaceFunc;\r\n}\r\n\r\nexport function createTokenizer(\r\n  Tokenizer: JSXTokenizer.ITokenizerConstructor\r\n): JSXTokenizer.ITokenizer {\r\n  return new Tokenizer();\r\n}\r\n","import { TokenReader } from \"./token-reader\";\r\nimport { JSXTokenizer } from \"./tokenizer\";\r\n\r\nexport module AST {\r\n  export type ASTNodeType =\r\n    | typeof ASTNodeType[keyof typeof ASTNodeType]\r\n    | typeof FinalTokenType[keyof typeof FinalTokenType];\r\n\r\n  export interface ASTNode {\r\n    type: ASTNodeType;\r\n    value?: string;\r\n    children?: ASTNode[];\r\n  }\r\n\r\n  export interface ASTElementNode extends ASTNode {\r\n    elementType?: \"Text\" | \"Element\" | \"Comment\" | \"Program\";\r\n    closeSelf?: Boolean | String;\r\n  }\r\n\r\n  // 非终结符\r\n  export const ASTNodeType = {\r\n    Program: Symbol(\"Program\"),\r\n    Expr: Symbol(\"Expr\"),\r\n    TagHead: Symbol(\"TagHead\"),\r\n    TagHeadStart: Symbol(\"TagHeadStart\"),\r\n    Attribute: Symbol(\"Attribute\"),\r\n    TagHeadEnd: Symbol(\"TagHeadEnd\"),\r\n    TagTail: Symbol(\"TagTail\"),\r\n  };\r\n\r\n  // 终结符\r\n  export const FinalTokenType = {\r\n    Text: Symbol(\"Text\"),\r\n    Comment: Symbol(\"Comment\"),\r\n    LeftBracket: Symbol(\"LeftBracket\"),\r\n    Identifier: Symbol(\"Identifier\"),\r\n    AttributeKey: Symbol(\"AttributeKey\"),\r\n    Equator: Symbol(\"Equator\"),\r\n    AttributeValue: Symbol(\"AttributeValue\"),\r\n    BackFlash: Symbol(\"BackFlash\"),\r\n    RightBracket: Symbol(\"RightBracket\"),\r\n  };\r\n\r\n  type UnFinalTokenHandlerReturnType = Boolean;\r\n  type UnFinalTokenHandler = () => UnFinalTokenHandlerReturnType;\r\n\r\n  type UnFinalToken =\r\n    | \"Program\"\r\n    | \"Expr\"\r\n    | \"TagHead\"\r\n    | \"TagHeadStart\"\r\n    | \"Attribute\"\r\n    | \"TagHeadEnd\"\r\n    | \"TagTail\";\r\n\r\n  export interface IParse extends Record<UnFinalToken, UnFinalTokenHandler> {\r\n    tokenReader: TokenReader;\r\n    ast: ASTElementNode;\r\n    closeSelf: Boolean;\r\n    createAST(tokens: JSXTokenizer.IToken[]): ASTNode;\r\n  }\r\n\r\n  export class Parse implements IParse {\r\n    tokenReader: TokenReader = new TokenReader([]);\r\n    ast: ASTElementNode;\r\n    currentNode!: ASTElementNode;\r\n    parentNode!: ASTElementNode;\r\n    currentToken!: JSXTokenizer.IToken;\r\n    closeSelf: Boolean = false;\r\n    identifierStack: string[] = [];\r\n\r\n    constructor(tokens: JSXTokenizer.IToken[]) {\r\n      this.tokenReader.loadTokens(tokens);\r\n      this.ast = this.toAST();\r\n    }\r\n\r\n    createAST(tokens: JSXTokenizer.IToken[]) {\r\n      this.tokenReader.loadTokens(tokens);\r\n      return this.toAST();\r\n    }\r\n\r\n    createASTNode(\r\n      type: ASTNodeType,\r\n      children: ASTElementNode[] | undefined,\r\n      value?: string\r\n    ): ASTElementNode {\r\n      let node: ASTElementNode = {\r\n        type: <any>type,\r\n      };\r\n      if (children !== undefined) node.children = children;\r\n      if (value !== undefined) node.value = value;\r\n      return node;\r\n    }\r\n\r\n    setCurrentToken(token: JSXTokenizer.IToken | null) {\r\n      if (token !== null) {\r\n        this.currentToken = token;\r\n      }\r\n    }\r\n\r\n    toAST(): ASTNode {\r\n      this.Program();\r\n      return this.ast;\r\n    }\r\n\r\n    checkIdentifier() {\r\n      if (this.closeSelf) return;\r\n\r\n      let lastIdentifier = this.identifierStack.pop();\r\n      if (this.tokenReader.peek()?.value !== lastIdentifier) {\r\n        throw TypeError(\r\n          `Unexpeted TagTail Identifier ${this.tokenReader.peek()?.value\r\n          } whitch is not match ${lastIdentifier}`\r\n        );\r\n      }\r\n    }\r\n\r\n    Program(): UnFinalTokenHandlerReturnType {\r\n      let root = this.createASTNode(ASTNodeType.Program, []);\r\n      this.currentNode = root;\r\n      this.parentNode = root;\r\n      this.ast = root;\r\n      if (!this.tokenReader.tokens.length) return false;\r\n      if (this.Expr()) {\r\n        console.log(\"AST Generate Success!\");\r\n        return true;\r\n      }\r\n      throw TypeError(\"AST Generate Failed!\");\r\n    }\r\n\r\n    Expr(): UnFinalTokenHandlerReturnType {\r\n      this.setCurrentToken(this.tokenReader.peek());\r\n      let oldParent = this.parentNode;\r\n      let node = this.createASTNode(ASTNodeType.Expr, []);\r\n      this.parentNode.children?.push(node);\r\n      this.parentNode = node;\r\n\r\n      if (this.currentToken.type === JSXTokenizer.Comment) {\r\n        let textNode = this.createASTNode(\r\n          FinalTokenType.Comment,\r\n          undefined,\r\n          this.currentToken.value\r\n        );\r\n        node.elementType = \"Comment\";\r\n        this.parentNode.children?.push(textNode);\r\n        this.tokenReader.read();\r\n        this.parentNode = oldParent;\r\n        this.Expr();\r\n        return true;\r\n      } else if (this.currentToken.type === JSXTokenizer.Text) {\r\n        let textNode = this.createASTNode(\r\n          FinalTokenType.Text,\r\n          undefined,\r\n          this.currentToken.value\r\n        );\r\n        node.elementType = \"Text\";\r\n        this.parentNode.children?.push(textNode);\r\n        this.tokenReader.read();\r\n        this.parentNode = oldParent;\r\n        this.Expr();\r\n        return true;\r\n      } else if (this.TagHead()) {\r\n        node.elementType = \"Element\";\r\n        if (this.closeSelf) {\r\n          node.closeSelf = true;\r\n          this.parentNode = oldParent;\r\n          this.Expr();\r\n          return true;\r\n        }\r\n        node.closeSelf = false;\r\n        this.parentNode = node;\r\n        if (this.Expr()) {\r\n          this.parentNode = node;\r\n          if (this.TagTail()) {\r\n            this.parentNode = oldParent;\r\n            this.Expr();\r\n            return true;\r\n          }\r\n          oldParent.children?.pop();\r\n          return false;\r\n        } else {\r\n          this.parentNode = node;\r\n          if (this.TagTail()) {\r\n            this.parentNode = oldParent;\r\n            this.Expr();\r\n            return true;\r\n          }\r\n        }\r\n      }\r\n      oldParent.children?.pop();\r\n      return false;\r\n    }\r\n\r\n    TagHead(): UnFinalTokenHandlerReturnType {\r\n      this.closeSelf = false;\r\n      this.setCurrentToken(this.tokenReader.peek());\r\n      let node = this.createASTNode(ASTNodeType.TagHead, []);\r\n      let oldParent = this.parentNode;\r\n      this.parentNode.children?.push(node);\r\n      this.parentNode = node;\r\n\r\n      if (this.TagHeadStart()) {\r\n        this.parentNode = node;\r\n        if (this.Attribute()) {\r\n          this.parentNode = node;\r\n          if (this.TagHeadEnd()) {\r\n            node.closeSelf = !!this.closeSelf;\r\n            return true;\r\n          }\r\n          oldParent.children?.pop();\r\n          return false;\r\n        } else {\r\n          this.parentNode = node;\r\n          if (this.TagHeadEnd()) {\r\n            node.closeSelf = !!this.closeSelf;\r\n            return true;\r\n          }\r\n        }\r\n      }\r\n      oldParent.children?.pop();\r\n      return false;\r\n    }\r\n\r\n    TagHeadStart(): UnFinalTokenHandlerReturnType {\r\n      this.setCurrentToken(this.tokenReader.peek());\r\n      let node = this.createASTNode(ASTNodeType.TagHeadStart, []);\r\n      this.parentNode.children?.push(node);\r\n      this.parentNode = node;\r\n\r\n      if (this.currentToken.value === \"<\") {\r\n        // this.parentNode.children?.push(\r\n        //   this.createASTNode(\r\n        //     FinalTokenType.LeftBracket,\r\n        //     undefined,\r\n        //     this.currentToken.value\r\n        //   )\r\n        // );\r\n        this.tokenReader.read();\r\n        this.setCurrentToken(this.tokenReader.peek());\r\n        if (this.currentToken.type === JSXTokenizer.JSXIdentifierType) {\r\n          this.identifierStack.push(this.currentToken.value);\r\n\r\n          this.parentNode.children?.push(\r\n            this.createASTNode(\r\n              FinalTokenType.Identifier,\r\n              undefined,\r\n              this.currentToken.value\r\n            )\r\n          );\r\n          this.tokenReader.read();\r\n          return true;\r\n        }\r\n        this.tokenReader.unread();\r\n        return false;\r\n      }\r\n      return false;\r\n    }\r\n\r\n    Attribute(): UnFinalTokenHandlerReturnType {\r\n      this.setCurrentToken(this.tokenReader.peek());\r\n      let oldParent = this.parentNode;\r\n      let node = this.createASTNode(ASTNodeType.Attribute, []);\r\n      this.parentNode.children?.push(node);\r\n      this.parentNode = node;\r\n\r\n      if (this.currentToken.type === JSXTokenizer.JSXAttributeKey) {\r\n        this.parentNode.children?.push(\r\n          this.createASTNode(\r\n            FinalTokenType.AttributeKey,\r\n            undefined,\r\n            this.currentToken.value\r\n          )\r\n        );\r\n        this.tokenReader.read();\r\n        if (this.tokenReader.peek()?.type === JSXTokenizer.Equator) {\r\n          // this.parentNode.children?.push(\r\n          //   this.createASTNode(\r\n          //     FinalTokenType.Equator,\r\n          //     undefined,\r\n          //     this.tokenReader.peek()?.value\r\n          //   )\r\n          // );\r\n          this.tokenReader.read();\r\n          if (\r\n            this.tokenReader.peek()?.type === JSXTokenizer.JSXAttributeValue\r\n          ) {\r\n            this.parentNode.children?.push(\r\n              this.createASTNode(\r\n                FinalTokenType.AttributeValue,\r\n                undefined,\r\n                this.tokenReader.peek()?.value\r\n              )\r\n            );\r\n            this.tokenReader.read();\r\n            this.parentNode = oldParent;\r\n            if (this.Attribute()) return true;\r\n            return true;\r\n          }\r\n          this.tokenReader.unread(); // 把 = 退掉\r\n          this.tokenReader.unread(); // 把 AttributeKey 退掉\r\n          oldParent.children?.pop();\r\n          return false;\r\n        }\r\n        this.parentNode = oldParent;\r\n        this.Attribute();\r\n        return true;\r\n      }\r\n      oldParent.children?.pop();\r\n      return false;\r\n    }\r\n\r\n    TagHeadEnd(): UnFinalTokenHandlerReturnType {\r\n      this.setCurrentToken(this.tokenReader.peek());\r\n      let node = this.createASTNode(ASTNodeType.TagHeadEnd, []);\r\n      this.parentNode.children?.push(node);\r\n      this.parentNode = node;\r\n      if (this.currentToken.type === JSXTokenizer.BackFlash) {\r\n        // this.parentNode.children?.push(\r\n        //   this.createASTNode(\r\n        //     FinalTokenType.BackFlash,\r\n        //     undefined,\r\n        //     this.currentToken.value\r\n        //   )\r\n        // );\r\n        this.tokenReader.read();\r\n        if (this.tokenReader.peek()?.value === \">\") {\r\n          // this.parentNode.children?.push(\r\n          //   this.createASTNode(\r\n          //     FinalTokenType.RightBracket,\r\n          //     undefined,\r\n          //     this.tokenReader.peek()?.value\r\n          //   )\r\n          // );\r\n          this.tokenReader.read();\r\n          this.closeSelf = true;\r\n          this.identifierStack.pop();\r\n          return true;\r\n        }\r\n        this.tokenReader.unread();\r\n        return false;\r\n      }\r\n      if (this.tokenReader.peek()?.value === \">\") {\r\n        // this.parentNode.children?.push(\r\n        //   this.createASTNode(\r\n        //     FinalTokenType.RightBracket,\r\n        //     undefined,\r\n        //     this.tokenReader.peek()?.value\r\n        //   )\r\n        // );\r\n        this.tokenReader.read();\r\n        return true;\r\n      }\r\n      return false;\r\n    }\r\n\r\n    TagTail(): UnFinalTokenHandlerReturnType {\r\n      this.setCurrentToken(this.tokenReader.peek());\r\n      let node = this.createASTNode(ASTNodeType.TagTail, []);\r\n      this.parentNode.children?.push(node);\r\n      this.parentNode = node;\r\n      if (this.currentToken.value === \"<\") {\r\n        // this.parentNode.children?.push(\r\n        //   this.createASTNode(\r\n        //     FinalTokenType.LeftBracket,\r\n        //     undefined,\r\n        //     this.currentToken.value\r\n        //   )\r\n        // );\r\n        this.tokenReader.read();\r\n        if (this.tokenReader.peek()?.type === JSXTokenizer.BackFlash) {\r\n          // this.parentNode.children?.push(\r\n          //   this.createASTNode(\r\n          //     FinalTokenType.BackFlash,\r\n          //     undefined,\r\n          //     this.tokenReader.peek()?.value\r\n          //   )\r\n          // );\r\n          this.tokenReader.read();\r\n          if (\r\n            this.tokenReader.peek()?.type === JSXTokenizer.JSXIdentifierType\r\n          ) {\r\n            this.checkIdentifier();\r\n            this.parentNode.children?.push(\r\n              this.createASTNode(\r\n                FinalTokenType.Identifier,\r\n                undefined,\r\n                this.tokenReader.peek()?.value\r\n              )\r\n            );\r\n            this.tokenReader.read();\r\n            if (this.tokenReader.peek()?.value === \">\") {\r\n              // this.parentNode.children?.push(\r\n              //   this.createASTNode(\r\n              //     FinalTokenType.RightBracket,\r\n              //     undefined,\r\n              //     this.tokenReader.peek()?.value\r\n              //   )\r\n              // );\r\n              this.tokenReader.read();\r\n              return true;\r\n            }\r\n            this.tokenReader.unread();\r\n            this.tokenReader.unread();\r\n            this.tokenReader.unread();\r\n            return false;\r\n          }\r\n          this.tokenReader.unread();\r\n          this.tokenReader.unread();\r\n          return false;\r\n        }\r\n        this.tokenReader.unread();\r\n        return false;\r\n      }\r\n      return false;\r\n    }\r\n  }\r\n}\r\n","import { AST } from \"./ast\";\r\nexport module Transform {\r\n  const extractASTParserNodeSet: {\r\n    [prop: string]: boolean;\r\n  } = {};\r\n  [\r\n    AST.ASTNodeType.TagHead,\r\n    AST.ASTNodeType.TagTail,\r\n    AST.ASTNodeType.TagHeadStart,\r\n    AST.ASTNodeType.TagHeadEnd,\r\n  ].forEach((key) => {\r\n    extractASTParserNodeSet[key.toString()] = true;\r\n  });\r\n\r\n  export interface ITransformer {\r\n    extractASTParserNode(node: AST.ASTNode): AST.ASTNode;\r\n    transform2JSXElement(node: AST.ASTNode): JSXElement;\r\n    createJSXElement(\r\n      identifier: string,\r\n      Attributes: JSXAttribute[],\r\n      children: JSXElement[],\r\n      ast: AST.ASTElementNode\r\n    ): JSXElement;\r\n  }\r\n\r\n  export interface JSXElement\r\n    extends Omit<AST.ASTElementNode, keyof AST.ASTNode> {\r\n    identifier: string;\r\n    Attributes: JSXAttribute[];\r\n    children?: JSXElement[];\r\n    value?: string;\r\n  }\r\n\r\n  export interface JSXAttribute {\r\n    key: string;\r\n    value: string | boolean;\r\n  }\r\n\r\n  export class Transfomer {\r\n    createJSXElement(\r\n      identifier: string,\r\n      Attributes: JSXAttribute[],\r\n      children: JSXElement[],\r\n      ast: AST.ASTElementNode\r\n    ): JSXElement {\r\n      let node: JSXElement = {\r\n        identifier,\r\n        Attributes,\r\n        children,\r\n        elementType: ast.elementType,\r\n        closeSelf: ast.closeSelf,\r\n      };\r\n\r\n      return node;\r\n    }\r\n\r\n    transform2JSXElement(node: AST.ASTNode): JSXElement {\r\n      let identifier = \"Program\",\r\n        Attributes: JSXAttribute[] = [],\r\n        children: JSXElement[] = [];\r\n      let root = this.createJSXElement(identifier, Attributes, children, node);\r\n\r\n      function buildJSXElement(\r\n        this: ITransformer,\r\n        node: AST.ASTNode,\r\n        parent: JSXElement\r\n      ) {\r\n        if (node.type === AST.ASTNodeType.Expr) {\r\n          let identifier: string,\r\n            Attributes: JSXAttribute[] = [],\r\n            children: JSXElement[] = [],\r\n            element: JSXElement;\r\n\r\n          node.children?.forEach((child) => {\r\n            if (child.type === AST.FinalTokenType.Identifier) {\r\n              identifier = child.value!;\r\n              element =\r\n                element ||\r\n                this.createJSXElement(identifier, Attributes, children, node);\r\n              return;\r\n            }\r\n            if (child.type === AST.ASTNodeType.Attribute) {\r\n              let attr: JSXAttribute = {\r\n                key: \"\",\r\n                value: \"\",\r\n              };\r\n              child.children?.forEach((item) => {\r\n                if (item.type === AST.FinalTokenType.AttributeKey) {\r\n                  attr.key = item.value!;\r\n                  return;\r\n                }\r\n\r\n                if (item.type === AST.FinalTokenType.AttributeValue) {\r\n                  attr.value = item.value!;\r\n                  return;\r\n                }\r\n              });\r\n              attr.value = attr.value || true;\r\n              Attributes.push(attr);\r\n              return;\r\n            }\r\n            if (child.type === AST.FinalTokenType.Comment) {\r\n              children.push({\r\n                identifier: \"[[Comment]]\",\r\n                Attributes: [],\r\n                value: child.value,\r\n              });\r\n              return;\r\n            }\r\n            if (child.type === AST.FinalTokenType.Text) {\r\n              element = this.createJSXElement(\r\n                '[[Text]]',\r\n                Attributes,\r\n                children,\r\n                node\r\n              );\r\n              delete element.children;\r\n              element.value = child.value;\r\n              return;\r\n            }\r\n            if (child.type === AST.ASTNodeType.Expr) {\r\n              buildJSXElement.call(this, child, element);\r\n            }\r\n          });\r\n\r\n          if (!parent.children) throw TypeError(\"parent should have children\");\r\n          if (!element!)\r\n            element = this.createJSXElement(\r\n              identifier!,\r\n              Attributes,\r\n              children,\r\n              node\r\n            );\r\n          parent.children.push(element);\r\n        }\r\n      }\r\n\r\n      node.children?.forEach((item) => buildJSXElement.call(this, item, root));\r\n      root.elementType = 'Program';\r\n      return root;\r\n    }\r\n\r\n    extractASTParserNode(node: AST.ASTNode): AST.ASTNode {\r\n      let extractedNode = Object.assign({}, node);\r\n\r\n      function extract(child: AST.ASTNode): AST.ASTNode[] {\r\n        if (extractASTParserNodeSet[child.type.toString()]) {\r\n          if (!child.children) return [child];\r\n          return child.children.map((item) => extract(item)).flat();\r\n        }\r\n        if (!child.children) return [child];\r\n        child.children = child.children.map((item) => extract(item)).flat();\r\n        return [child];\r\n      }\r\n      if (!node.children) return node;\r\n      extractedNode.children = node.children\r\n        .map((item) => extract(item))\r\n        .flat();\r\n\r\n      return extractedNode;\r\n    }\r\n  }\r\n}\r\n","import { AST } from \"./ast\";\r\nimport { createTokenizer, JSXTokenizer, Tokenizer } from \"./tokenizer\";\r\nimport { Transform } from \"./transform\";\r\n\r\nexport module JSXCompiler {\r\n  export interface compileFileOptions {\r\n    path: string;\r\n  }\r\n\r\n  export interface ICompiler {\r\n    tokenizer: JSXTokenizer.ITokenizer;\r\n    astParser: AST.IParse;\r\n    transformer: Transform.Transfomer;\r\n    tokens: JSXTokenizer.IToken[];\r\n    ast?: AST.ASTNode;\r\n\r\n    compile(template: string): AST.ASTNode;\r\n    // compileFile(options: compileFileOptions): AST.ASTNode;\r\n  }\r\n\r\n  export class Compiler implements ICompiler {\r\n    tokenizer: JSXTokenizer.ITokenizer = createTokenizer(Tokenizer);\r\n    astParser: AST.IParse = new AST.Parse([]);\r\n    transformer: Transform.Transfomer = new Transform.Transfomer();\r\n    tokens: JSXTokenizer.IToken[] = [];\r\n    ast?: AST.ASTNode;\r\n    jsxElement?: Transform.JSXElement;\r\n\r\n    compile(template: string) {\r\n      console.log(\"================== Compile Start ====================\");\r\n      this.tokens = this.tokenizer.run(template);\r\n      this.ast = this.astParser.createAST(this.tokens);\r\n      this.ast = this.transformer.extractASTParserNode(this.ast);\r\n      this.jsxElement = this.transformer.transform2JSXElement(this.ast);\r\n      console.log(\"Transform Success!\");\r\n      console.log(\"================== Compile Success! ====================\");\r\n      return this.ast;\r\n    }\r\n\r\n    // compileFile(options: compileFileOptions): AST.ASTNode {\r\n    //   let template = fs.readFileSync(options.path).toString();\r\n\r\n    //   return this.compile(template);\r\n    // }\r\n  }\r\n}\r\n","import { AST } from \"./ast\";\r\nimport { JSXCompiler } from \"./compiler\";\r\n\r\nexport { Tokenizer } from \"./tokenizer\";\r\nexport const Parse = AST.Parse;\r\nexport const Compiler = JSXCompiler.Compiler;\r\n\r\n"],"names":[],"mappings":"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"}